- hosts: tag_Name_Scenario
  name: start geth
  remote_user: "{{ remote_user }}"
  gather_facts: true
  roles:
    - scenario 
    - common
  tags:
    - start_geth

  tasks:
    # Collect instance id: http://stackoverflow.com/a/27307254 
    - action: ec2_facts

    - name: stop geth (KILL)
      shell: "killall -15 geth"

    - name: init geth
      shell:
        cmd: "geth --datadir {{ geth_datadir }} init {{ geth_datadir }}/genesis.json"

      # run geth in background and redirect output to ~/geth.log 
    - name: run geth command
      shell:
        cmd: "nohup {{ geth_datadir }}/start.sh 2>&1 {{ user_home }}/geth.log &"


- hosts: tag_Name_Scenario
  name: start raiden
  remote_user: "{{ remote_user }}"
  gather_facts: true
  roles:
    - scenario 
    - common
  tags:
    - start_geth
  vars:
    scenario_runner: "{{ user_home }}/raiden/tools/app.py"

  tasks:
    # Collect instance id: http://stackoverflow.com/a/27307254 
    - action: ec2_facts

      # note: this is far from working for ansible, just to get the general idea
    - name: shell command stub (for dir in {{ user_home }}/40*; do...)
      #chdir: "{{ user_home }}"
      debug: "raidenvenv/bin/python {{ scenario_runner }} $(cat $dir/raiden_flags.txt) --privatekey $(cat $dir/privatekey.txt) --external_listen_address {{ node_ip }}:$( basename $dir )"
